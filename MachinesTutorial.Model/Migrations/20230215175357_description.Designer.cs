// <auto-generated />
using System;
using MachinesTutorial.Model.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MachinesTutorial.Model.Migrations
{
    [DbContext(typeof(MachineContext))]
    [Migration("20230215175357_description")]
    partial class description
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.2");

            modelBuilder.Entity("MachinesTutorial.Model.Machine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("PhotoSource")
                        .HasColumnType("TEXT");

                    b.Property<int?>("Progress")
                        .HasColumnType("INTEGER");

                    b.Property<int>("StepId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Machines");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "wz30000 AIR COMRESSOR",
                            PhotoSource = "/Images/w30k/main.jpg",
                            Progress = 0,
                            StepId = 0
                        });
                });

            modelBuilder.Entity("MachinesTutorial.Model.Photo", b =>
                {
                    b.Property<int>("PhotoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Source")
                        .HasColumnType("TEXT");

                    b.Property<int?>("StepId")
                        .HasColumnType("INTEGER");

                    b.HasKey("PhotoId");

                    b.HasIndex("StepId");

                    b.ToTable("Photos");

                    b.HasData(
                        new
                        {
                            PhotoId = 1,
                            Source = "Images/w30k/Step1.png",
                            StepId = 1
                        },
                        new
                        {
                            PhotoId = 2,
                            Source = "Images/w30k/Step2.png",
                            StepId = 2
                        },
                        new
                        {
                            PhotoId = 3,
                            Source = "Images/w30k/Step3.png",
                            StepId = 3
                        },
                        new
                        {
                            PhotoId = 4,
                            Source = "Images/w30k/Step4.png",
                            StepId = 4
                        },
                        new
                        {
                            PhotoId = 5,
                            Source = "Images/w30k/Step5.png",
                            StepId = 5
                        });
                });

            modelBuilder.Entity("MachinesTutorial.Model.Step", b =>
                {
                    b.Property<int>("StepId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<int>("MachineId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.HasKey("StepId");

                    b.HasIndex("MachineId");

                    b.ToTable("Steps");

                    b.HasData(
                        new
                        {
                            StepId = 1,
                            MachineId = 1,
                            Title = "Connect the air compressor to machine air input:"
                        },
                        new
                        {
                            StepId = 2,
                            MachineId = 1,
                            Title = "Start power:"
                        },
                        new
                        {
                            StepId = 3,
                            Description = "For more details, please check the following ID \r\nIntelligent Temperature Controller instructions",
                            MachineId = 1,
                            Title = "Set parameters of temperature:"
                        },
                        new
                        {
                            StepId = 4,
                            Description = "Press down for making rods down, \r\nthen material will come out.Rods for pressing material.Press upward for making rods rising.Rods for pressing material",
                            MachineId = 1,
                            Title = "Driving system:"
                        },
                        new
                        {
                            StepId = 5,
                            Description = "The height between base and injector mouth is 8cm. If you want adjust height, please adjust it \r\naccording to the instructions. Unscrew and remove fastening \r\nscrews and adjusting the height",
                            MachineId = 1,
                            Title = " Adjusting mold"
                        });
                });

            modelBuilder.Entity("MachinesTutorial.Model.Video", b =>
                {
                    b.Property<int>("VideoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Source")
                        .HasColumnType("TEXT");

                    b.Property<int?>("StepId")
                        .HasColumnType("INTEGER");

                    b.HasKey("VideoId");

                    b.HasIndex("StepId");

                    b.ToTable("Videos");
                });

            modelBuilder.Entity("MachinesTutorial.Model.Photo", b =>
                {
                    b.HasOne("MachinesTutorial.Model.Step", "Step")
                        .WithMany("Photos")
                        .HasForeignKey("StepId");

                    b.Navigation("Step");
                });

            modelBuilder.Entity("MachinesTutorial.Model.Step", b =>
                {
                    b.HasOne("MachinesTutorial.Model.Machine", "Machine")
                        .WithMany("Steps")
                        .HasForeignKey("MachineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Machine");
                });

            modelBuilder.Entity("MachinesTutorial.Model.Video", b =>
                {
                    b.HasOne("MachinesTutorial.Model.Step", "Step")
                        .WithMany("Video")
                        .HasForeignKey("StepId");

                    b.Navigation("Step");
                });

            modelBuilder.Entity("MachinesTutorial.Model.Machine", b =>
                {
                    b.Navigation("Steps");
                });

            modelBuilder.Entity("MachinesTutorial.Model.Step", b =>
                {
                    b.Navigation("Photos");

                    b.Navigation("Video");
                });
#pragma warning restore 612, 618
        }
    }
}
